%% gradient 2 + obstacle formulation
function [active, dphia, dphib] = calcPhi_grad2_obstacle_red(phia,phib,phic,laplace_a,laplace_b,params)
    nx = params.nx;
    ny = params.ny;
    dx = params.dx;
    dy = params.dy;
    kab = params.kab;
    kac = params.kac;
    kbc = params.kbc;
    Oab = params.Oab;
    Oac = params.Oac;
    Obc = params.Obc;
    
    % Identify cells with laplacian to reduce actively computed cells
    [row,col] = find(laplace_a~=0 | laplace_b~=0);
    active = row+nx*(col-1);
    
    dF_dphia =  2.*kab.*(  2.*phia(active).*((phib(active+1)-phib(active-1)).^2/(4*dx*dx) + (phib(active+nx)-phib(active-nx)).^2/(4*dy*dy)) ...
                         - 2.*phib(active).*((phia(active+1)-phia(active-1)).*(phib(active+1)-phib(active-1))/(4*dx*dx) + (phia(active+nx)-phia(active-nx)).*(phib(active+nx)-phib(active-nx))/(4*dy*dy)) ...
                         + phia(active).*phib(active).*laplace_b(active) - phib(active).^2.*laplace_a(active))...
              + 2.*kac.*(  2.*phia(active).*((phic(active+1)-phic(active-1)).^2/(4*dx*dx) + (phic(active+nx)-phic(active-nx)).^2/(4*dy*dy)) ...
                         - 2.*phic(active).*((phia(active+1)-phia(active-1)).*(phic(active+1)-phic(active-1))/(4*dx*dx) + (phia(active+nx)-phia(active-nx)).*(phic(active+nx)-phic(active-nx))/(4*dy*dy)) ...
                         - phia(active).*phic(active).*(laplace_a(active)+laplace_b(active)) - phic(active).^2.*laplace_a(active))...
              + Oab.*phib(active) + Oac.*phic(active);
    dF_dphib =  2.*kab.*(  2.*phib(active).*((phia(active+1)-phia(active-1)).^2/(4*dx*dx) + (phia(active+nx)-phia(active-nx)).^2/(4*dy*dy)) ...
                         - 2.*phia(active).*((phia(active+1)-phia(active-1)).*(phib(active+1)-phib(active-1))/(4*dx*dx) + (phia(active+nx)-phia(active-nx)).*(phib(active+nx)-phib(active-nx))/(4*dy*dy)) ...
                         + phia(active).*phib(active).*laplace_a(active) - phia(active).^2.*laplace_b(active))...
              + 2.*kbc.*(  2.*phib(active).*((phic(active+1)-phic(active-1)).^2/(4*dx*dx) + (phic(active+nx)-phic(active-nx)).^2/(4*dy*dy)) ...
                         - 2.*phic(active).*((phib(active+1)-phib(active-1)).*(phic(active+1)-phic(active-1))/(4*dx*dx) + (phib(active+nx)-phib(active-nx)).*(phic(active+nx)-phic(active-nx))/(4*dy*dy)) ...
                         - phib(active).*phic(active).*(laplace_a(active)+laplace_b(active)) - phic(active).^2.*laplace_b(active))...
              + Oab.*phia(active) + Obc.*phic(active);
    dF_dphic =  2.*kac.*(  2.*phic(active).*((phia(active+1)-phia(active-1)).^2/(4*dx*dx) + (phia(active+nx)-phia(active-nx)).^2/(4*dy*dy)) ...
                          -2.*phia(active).*((phia(active+1)-phia(active-1)).*(phic(active+1)-phic(active-1))/(4*dx*dx) + (phia(active+nx)-phia(active-nx)).*(phic(active+nx)-phic(active-nx))/(4*dy*dy)) ...
                          + phia(active).*phic(active).*laplace_a(active) + phia(active).^2.*(laplace_a(active)+laplace_b(active)))...
              + 2.*kbc.*(  2.*phic(active).*((phib(active+1)-phib(active-1)).^2/(4*dx*dx) + (phib(active+nx)-phib(active-nx)).^2/(4*dy*dy)) ...
                         - 2.*phib(active).*((phib(active+1)-phib(active-1)).*(phic(active+1)-phic(active-1))/(4*dx*dx) + (phib(active+nx)-phib(active-nx)).*(phic(active+nx)-phic(active-nx))/(4*dy*dy)) ...
                         + phib(active).*phic(active).*laplace_b(active) + phib(active).^2.*(laplace_a(active)+laplace_b(active)))...
              + Oac.*phia(active) + Obc.*phib(active);

    dphia = 2.*dF_dphia - dF_dphib - dF_dphic;
    dphib = 2.*dF_dphib - dF_dphia - dF_dphic;
end